{"version":3,"sources":["actions/ActionTypes.js","services/MessageService.js","components/Header.js","actions/MenuActions.js","components/Error.js","actions/ErrorActions.js","components/App.js","actions/AppActions.js","reducers/InitialAppState.js","reducers/AppReducer.js","reducers/InitialHeaderState.js","reducers/HeaderReducer.js","reducers/InitialErrorState.js","reducers/ErrorReducer.js","reducers/index.js","store/index.js","index.js"],"names":["APP_LOADING","MESSAGE_LOADED","APP_STOPPED_LOADING","SHOW_ERROR","DISMISS_ERROR","MENU_OPENED","MENU_CLOSED","axios","require","Header","toggleMenu","props","isOpen","closeMenu","openMenu","className","this","onClick","Component","connect","state","headerReducer","dispatch","type","types","menuActions","Error","classNames","names","showError","dismiss","errorMessage","undefined","errorReducer","errorActions","App","loadMessage","isAppLoading","message","appReducer","loading","a","async","get","then","response","payload","AppActions","initialState","action","combineReducers","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd610e14.chunk.js","sourcesContent":["export const APP_LOADING = \"APP_LOADING\";\nexport const MESSAGE_LOADED = \"MESSAGE_LOADED\";\nexport const APP_STOPPED_LOADING = \"APP_STOPPED_LOADING\";\nexport const SHOW_ERROR= \"SHOW_ERROR\";\nexport const DISMISS_ERROR= \"DISMISS_ERROR\";\nexport const MENU_OPENED = \"MENU_OPENED\";\nexport const MENU_CLOSED = \"MENU_CLOSED\";\n\n","let axios = require('axios');\n\nexport function loadMessage() {\n  return axios.get('/api/messages').then(response => {\n    return response['data'][0].message;\n  });\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as menuActions from '../actions/MenuActions.js';\n\nclass Header extends Component {\n  toggleMenu = () => {\n    if (this.props.isOpen) {\n      this.props.closeMenu();\n    } else  {\n      this.props.openMenu();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <h1 className=\"title\">Experiments</h1>\n        <div \n            className={ this.props.isOpen ? \"hamburger-menu open\" : \"hamburger-menu\" } \n            onClick={() => { this.toggleMenu() }}>\n          <div className=\"bar1\"></div>\n          <div className=\"bar2\"></div>\n          <div className=\"bar3\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isOpen: state.headerReducer.isOpen\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openMenu() {\n    menuActions.openMenu(dispatch);\n  },\n  closeMenu() {\n    menuActions.closeMenu(dispatch);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import * as types from \"./ActionTypes\";\n\nexport function openMenu(dispatch) {\n  dispatch({ type: types.MENU_OPENED });\n}\n\nexport function closeMenu(dispatch) {\n  dispatch({ type: types.MENU_CLOSED });\n}\n\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport './Error.css';\nimport * as errorActions from \"../actions/ErrorActions\";\n\nclass Error extends Component {\n  classNames = () => {\n    let names = \"error\";\n    if (this.props.showError) {\n      names += \" show\";\n    }\n    return names;\n  }\n\n  dismiss = () => {\n    this.props.dismiss();\n  }\n\n  render() {\n    return (<div className={this.classNames()}>\n      <div className=\"close\" onClick={() => this.dismiss() }>X</div>\n      <h3>Oh no!</h3>\n      It looks like something went wrong. Here's some details...\n      <div className=\"details\">\n        {this.props.errorMessage}\n      </div>\n      </div>);\n  }\n}\n\nconst mapStateToProps = state => ({\n  showError: state.errorReducer.errorMessage !== undefined,\n  errorMessage: state.errorReducer.errorMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dismiss() {\n    errorActions.dismissError(dispatch);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);\n","import * as types from './ActionTypes';\n\nexport function dismissError(dispatch) {\n  dispatch({ type: types.DISMISS_ERROR });\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as AppActions from '../actions/AppActions';\nimport './App.css';\nimport Header from './Header';\nimport Error from './Error';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.loadMessage();\n  }\n\n  render() {\n    return (\n      <div>\n        <Error />\n        <Header />\n        <div>\n          { this.props.isAppLoading ? 'Loading...' : this.props.message }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  isAppLoading: state.appReducer.loading,\n  message: state.appReducer.message,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMessage() {\n    AppActions.loadMessage(dispatch);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","import * as types from './ActionTypes';\nimport * as messageService from '../services/MessageService';\n\nexport async function loadMessage(dispatch) {\n  dispatch({ type: types.APP_LOADING});\n  try {\n    const message = await messageService.loadMessage();\n    dispatch({ type: types.MESSAGE_LOADED, payload: message });\n    dispatch({ type: types.APP_STOPPED_LOADING });\n  } catch (error) {\n    dispatch({ type: types.APP_STOPPED_LOADING });\n    dispatch({ type: types.SHOW_ERROR, payload: error });\n  }\n}\n","export default {\n  loading: false,\n  message: 'nothing yet',\n  errorMessage: undefined\n};\n\n","import initialState from \"./InitialAppState\";\nimport * as types from '../actions/ActionTypes';\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.APP_LOADING:\n      return {\n          ...state,\n          loading: true,\n        };\n    case types.MESSAGE_LOADED:\n      return {\n          ...state,\n          message: action.payload\n        };\n    case types.APP_STOPPED_LOADING:\n      return {\n          ...state,\n          loading: false,\n        };\n    default:\n      return state\n  }\n};\n\nexport default appReducer;\n","export default {\n  isOpen: false\n};\n\n","import initialState from \"./InitialHeaderState\";\nimport * as types from \"../actions/ActionTypes\";\n\nconst headerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.MENU_CLOSED:\n      return {\n          ...state,\n          isOpen: false\n        };\n    case types.MENU_OPENED:\n      return {\n          ...state,\n          isOpen: true\n        };\n    default:\n      return state\n  }\n};\n\nexport default headerReducer;\n","export default {\n  showError: false,\n  errorMessage: undefined\n};\n\n","import initialState from \"./InitialErrorState\";\nimport * as types from \"../actions/ActionTypes\";\n\nconst errorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_ERROR:\n      return {\n          ...state,\n          errorMessage: action.payload.message\n        };\n    case types.DISMISS_ERROR:\n      return {\n          ...state,\n          errorMessage: undefined\n        };\n    default:\n      return state\n  }\n};\n\nexport default errorReducer;\n","import { combineReducers } from 'redux'\nimport appReducer from './AppReducer'\nimport headerReducer from './HeaderReducer'\nimport errorReducer from './ErrorReducer'\n\nexport default combineReducers({\n  appReducer,\n  headerReducer,\n  errorReducer\n})\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\n\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport function configureStore() {\n  return createStore(\n    rootReducer,\n    storeEnhancers(applyMiddleware(thunk))\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { configureStore } from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n"],"sourceRoot":""}